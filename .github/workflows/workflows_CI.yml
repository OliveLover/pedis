name: Java CI with Gradle

on:
  push:
    branches: [ "git-hub-actions-build" ]
  pull_request:

env:
  S3_BUCKET_NAME: github-actions-deploy-0824

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Github submodule
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PEDIS_TOKEN }}
          submodules: true

      # Gradle 유효성 검사
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      # Gradle 빌드 & 테스트
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew --info test

      - name: Run the Gradle package task
        run: ./gradlew build

      # 디렉토리 생성
      - name: Make Directory
        run: mkdir -p deploy

      # Jar 파일 복사
      - name: Copy Jar
        run: cp ./build/libs/*SNAPSHOT.jar ./deploy

      # appspec.yml 파일 복사
      - name: Copy appspec.yml
        run: cp appspec.yml ./deploy

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Make zip file
        run: zip -r ./github-actions.zip ./deploy
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./github-actions.zip s3://$S3_BUCKET_NAME/

      #      - name: Run Coverage
      #        run: ./gradlew jacocoTestReport

      #      - name: Jacoco Report to PR
      #        id: jacoco
      #        uses: madrapps/jacoco-report@v1.6.1
      #        with:
      #          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml,
      #          token: ${{ secrets.PEDIS_TOKEN }}
      #          min-coverage-overall: 40
      #          min-coverage-changed-files: 60
      #          title: Code Coverage
      #          update-comment: true

      - name: Produce the coverage report
        uses: insightsengineering/coverage-action@v2
        with:
        # Path to the Cobertura XML report.
          path: ./build/reports/jacoco/test/jacocoTestReport.xml
        # Minimum total coverage, if you want to the
        # workflow to enforce it as a standard.
        # This has no effect if the `fail` arg is set to `false`.
          threshold: 80
        # Fail the workflow if the minimum code coverage
        # reuqirements are not satisfied.
          fail: true
        # Publish the rendered output as a PR comment
          publish: true
        # Create a coverage diff report.
          diff: true
        # Branch to diff against.
        # Compare the current coverage to the coverage
        # determined on this branch.
          diff-branch: git-hub-actions
        # This is where the coverage reports for the
        # `diff-branch` are stored.
        # Branch is created if it doesn't already exist'.
          diff-storage: _xml_coverage_reports